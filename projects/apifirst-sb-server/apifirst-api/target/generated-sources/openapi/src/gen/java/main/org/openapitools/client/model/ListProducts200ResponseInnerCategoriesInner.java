/*
 * API first course on Udemy
 * # Introduction API first course on Udemy 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: rsouza01@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * ListProducts200ResponseInnerCategoriesInner
 */
@JsonPropertyOrder({
  ListProducts200ResponseInnerCategoriesInner.JSON_PROPERTY_ID,
  ListProducts200ResponseInnerCategoriesInner.JSON_PROPERTY_CATEGORY,
  ListProducts200ResponseInnerCategoriesInner.JSON_PROPERTY_DESCRIPTION,
  ListProducts200ResponseInnerCategoriesInner.JSON_PROPERTY_DATE_CREATED,
  ListProducts200ResponseInnerCategoriesInner.JSON_PROPERTY_DATE_UPDATED
})
@JsonTypeName("listProducts_200_response_inner_categories_inner")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-09-13T20:31:19.509005654Z[Etc/UTC]")
public class ListProducts200ResponseInnerCategoriesInner {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private String category;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_DATE_CREATED = "dateCreated";
  private OffsetDateTime dateCreated;

  public static final String JSON_PROPERTY_DATE_UPDATED = "dateUpdated";
  private OffsetDateTime dateUpdated;

  public ListProducts200ResponseInnerCategoriesInner() {
  }

  @JsonCreator
  public ListProducts200ResponseInnerCategoriesInner(
    @JsonProperty(JSON_PROPERTY_ID) UUID id, 
    @JsonProperty(JSON_PROPERTY_DATE_CREATED) OffsetDateTime dateCreated, 
    @JsonProperty(JSON_PROPERTY_DATE_UPDATED) OffsetDateTime dateUpdated
  ) {
    this();
    this.id = id;
    this.dateCreated = dateCreated;
    this.dateUpdated = dateUpdated;
  }

   /**
   * The unique identifier of the category
   * @return id
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }




  public ListProducts200ResponseInnerCategoriesInner category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * The category of the product
   * @return category
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCategory(String category) {
    this.category = category;
  }


  public ListProducts200ResponseInnerCategoriesInner description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * The description of the category
   * @return description
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDescription(String description) {
    this.description = description;
  }


   /**
   * ISO 8601 Timestamp. Date Created and Date Updated are system managed values, should not be sent in request payloads - will be ignored.
   * @return dateCreated
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_CREATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateCreated() {
    return dateCreated;
  }




   /**
   * ISO 8601 Timestamp. Date Created and Date Updated are system managed values, should not be sent in request payloads - will be ignored.
   * @return dateUpdated
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATE_UPDATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDateUpdated() {
    return dateUpdated;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ListProducts200ResponseInnerCategoriesInner listProducts200ResponseInnerCategoriesInner = (ListProducts200ResponseInnerCategoriesInner) o;
    return Objects.equals(this.id, listProducts200ResponseInnerCategoriesInner.id) &&
        Objects.equals(this.category, listProducts200ResponseInnerCategoriesInner.category) &&
        Objects.equals(this.description, listProducts200ResponseInnerCategoriesInner.description) &&
        Objects.equals(this.dateCreated, listProducts200ResponseInnerCategoriesInner.dateCreated) &&
        Objects.equals(this.dateUpdated, listProducts200ResponseInnerCategoriesInner.dateUpdated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, category, description, dateCreated, dateUpdated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ListProducts200ResponseInnerCategoriesInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    dateCreated: ").append(toIndentedString(dateCreated)).append("\n");
    sb.append("    dateUpdated: ").append(toIndentedString(dateUpdated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

